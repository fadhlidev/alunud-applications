{
  "openapi": "3.0.3",
  "info": {
    "title": "Users API",
    "description": "Al Unud Application - Users",
    "version": "1.0.0",
    "contact": {
      "name": "Fadhli Syaifullah",
      "email": "me@fadhli.dev"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "security": [
    {
      "cookieAuth": []
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "summary": "Get User List",
        "responses": {
          "200": {
            "description": "Success get user list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "SUCCESS_GET_USER_LIST"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Register New User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "nullable": false,
                    "example": "fulan"
                  },
                  "email": {
                    "type": "string",
                    "nullable": true,
                    "example": "fulan@email.com"
                  },
                  "password": {
                    "type": "string",
                    "nullable": false,
                    "example": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "nullable": false,
                    "example": "password"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "confirmPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success register new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "SUCCESS_REGISTER_NEW_USER"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to register new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "FAILED_REGISTER_NEW_USER"
                    },
                    "error": {
                      "type": "string",
                      "example": "Passwords do not match"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "FAILED_REGISTER_NEW_USER"
                    },
                    "error": {
                      "type": "string",
                      "example": "User with username fulan is already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{username}": {
      "parameters": [
        {
          "in": "path",
          "name": "username",
          "schema": {
            "type": "string",
            "example": "fulan"
          },
          "required": true,
          "description": "User's username"
        }
      ],
      "get": {
        "summary": "Get User",
        "responses": {
          "200": {
            "description": "Success get user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "SUCCESS_GET_USER"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed to get user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "FAILED_GET_USER"
                    },
                    "error": {
                      "type": "string",
                      "example": "User with username fulan not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "responses": {
          "204": {
            "description": "Success delete user"
          },
          "404": {
            "description": "Failed to delete user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "FAILED_DELETE_USER"
                    },
                    "error": {
                      "type": "string",
                      "example": "User with username fulan not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{username}/email": {
      "parameters": [
        {
          "in": "path",
          "name": "username",
          "schema": {
            "type": "string",
            "example": "fulan"
          },
          "required": true,
          "description": "User's username"
        }
      ],
      "patch": {
        "summary": "Update User Email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "nullable": false,
                    "example": "fulan@email.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success update user email"
          },
          "400": {
            "description": "Failed to update user email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "FAILED_UPDATE_USER_EMAIL"
                    },
                    "error": {
                      "type": "string",
                      "example": "Please provide a valid email address"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed to update user email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "FAILED_UPDATE_USER_EMAIL"
                    },
                    "error": {
                      "type": "string",
                      "example": "User with username fulan not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{username}/password": {
      "parameters": [
        {
          "in": "path",
          "name": "username",
          "schema": {
            "type": "string",
            "example": "fulan"
          },
          "required": true,
          "description": "User's username"
        }
      ],
      "patch": {
        "summary": "Update User Password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "nullable": true,
                    "example": "password"
                  },
                  "newPassword": {
                    "type": "string",
                    "nullable": false,
                    "example": "new_password"
                  },
                  "confirmNewPassword": {
                    "type": "string",
                    "nullable": false,
                    "example": "new_password"
                  }
                },
                "required": [
                  "newPassword",
                  "confirmNewPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success update user password"
          },
          "400": {
            "description": "Failed to update user password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "FAILED_UPDATE_USER_PASSWORD"
                    },
                    "error": {
                      "type": "string",
                      "example": "Please provide a valid email address"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed to update user password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "FAILED_UPDATE_USER_PASSWORD"
                    },
                    "error": {
                      "type": "string",
                      "example": "User with username fulan not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "token"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "0a2d386b-4f88-4dc6-91a1-56d5208e183e"
          },
          "username": {
            "type": "string",
            "example": "fulan"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "example": "f***n@email.com"
          }
        }
      }
    }
  }
}